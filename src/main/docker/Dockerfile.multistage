## Stage 0 : get access to certs
FROM quay.io/quarkus/ubi-quarkus-native-image:19.1.1 AS certs

# certs
RUN mkdir -p /tmp/ssl-libs/lib && cp /opt/graalvm/jre/lib/security/cacerts /tmp/ssl-libs


## Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/centos-quarkus-maven:19.3.1-java11 AS build

COPY pom.xml /usr/src/app/
RUN mvn -f /usr/src/app/pom.xml -B de.qaware.maven:go-offline-maven-plugin:1.2.5:resolve-dependencies
COPY src /usr/src/app/src
USER root
RUN chown -R quarkus /usr/src/app
USER quarkus
RUN mvn -f /usr/src/app/pom.xml -Djacoco.skip=true -DWEATHER_API_TOKEN=junk -Dquarkus.http.host=0.0.0.0 -Dvertx.cacheDirBase=/tmp/vertx -Pnative clean package


## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal

WORKDIR /work/
COPY --from=build /usr/src/app/target/*-runner /work/application
COPY --from=certs /tmp/ssl-libs/ /work/cacerts

# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0", "-Djavax.net.ssl.trustStore=/work/cacerts"]
